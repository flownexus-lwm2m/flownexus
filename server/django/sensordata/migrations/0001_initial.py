# Generated by Django 5.0.6 on 2024-05-26 14:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "device_id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Firmware",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.CharField(max_length=100)),
                ("file_name", models.CharField(max_length=255)),
                ("download_url", models.URLField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_type", models.CharField(max_length=100)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="sensordata.device",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Resource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("int_value", models.IntegerField(blank=True, null=True)),
                ("float_value", models.FloatField(blank=True, null=True)),
                ("str_value", models.CharField(blank=True, max_length=512, null=True)),
                ("bool_value", models.BooleanField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="sensordata.device",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DeviceOperation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("operation_type", models.CharField(max_length=100)),
                ("status", models.CharField(max_length=100)),
                ("timestamp_sent", models.DateTimeField()),
                ("retransmit_counter", models.IntegerField(default=0)),
                ("last_attempt", models.DateTimeField(auto_now=True)),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="sensordata.resource",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResourceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.IntegerField()),
                ("resource_id", models.IntegerField()),
                ("name", models.CharField(max_length=255)),
                ("data_type", models.CharField(max_length=50)),
            ],
            options={
                "unique_together": {("object_id", "resource_id")},
            },
        ),
        migrations.AddField(
            model_name="resource",
            name="resource_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="sensordata.resourcetype",
            ),
        ),
        migrations.CreateModel(
            name="EventResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="resources",
                        to="sensordata.event",
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="sensordata.resource",
                    ),
                ),
            ],
            options={
                "unique_together": {("event", "resource")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="resource",
            unique_together={("device", "resource_type", "timestamp")},
        ),
    ]
